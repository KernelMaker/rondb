--source include/have_ndb.inc
--source include/have_util_curl.inc

let $rdrs_ronsql = curl --no-progress-meter --fail-with-body -X POST
  -H "Content-Type: application/json"
  http://$RDRS_NOKEY_HOST:$RDRS_NOKEY_PORT/0.1.0/ronsql -d;



let $i=2;
while($i){
if($i==1) {
--echo ===== Prepare table for encoding tests for datatype CHAR(50) =====
CREATE TABLE encoding_test (
  title     CHAR(50)    CHARACTER SET latin1  NOT NULL,
  t_greek   CHAR(50)    CHARACTER SET greek   NOT NULL,
  t_latin1  CHAR(50)    CHARACTER SET latin1  NOT NULL,
  t_utf16   CHAR(50)    CHARACTER SET utf16   NOT NULL,
  t_utf8mb4 CHAR(50)    CHARACTER SET utf8mb4 NOT NULL,
  PRIMARY KEY USING HASH (title)) ENGINE=NDB;
}
if($i==2) {
--echo ===== Prepare table for encoding tests for datatype VARCHAR(50) =====
CREATE TABLE encoding_test (
  title     CHAR(50)    CHARACTER SET latin1  NOT NULL,
  t_greek   VARCHAR(50) CHARACTER SET greek   NOT NULL,
  t_latin1  VARCHAR(50) CHARACTER SET latin1  NOT NULL,
  t_utf16   VARCHAR(50) CHARACTER SET utf16   NOT NULL,
  t_utf8mb4 VARCHAR(50) CHARACTER SET utf8mb4 NOT NULL,
  PRIMARY KEY USING HASH (title)) ENGINE=NDB;
}
# todo when RonSQL supports printing GROUP BY column of type Text, add that case

INSERT INTO encoding_test VALUES
  ('1. Basic characters',
   'ABCabc', 'ABCabc', 'ABCabc', 'ABCabc'),
  ('2. Swedish characters',
    '(unsupported)', 'XYZÅÄÖxyzåäö_', 'XYZÅÄÖxyzåäö_', 'XYZÅÄÖxyzåäö_'),
  ('3. Greek characters',
    'ΑΒΓαβγ_', '(unsupported)', 'ΑΒΓαβγ_', 'ΑΒΓαβγ_'),
  ('4. Spaces and suffix trimming',
    '   spaces   ', '   spaces   ', '   spaces   ', '   spaces   '),
  ('5. Escaped characters',
    'NUL\0 SQ\' DQ\" BS\b NL\n CR\r TA\t SUB\Z BS\\ S/',
    'NUL\0 SQ\' DQ\" BS\b NL\n CR\r TA\t SUB\Z BS\\ S/',
    'NUL\0 SQ\' DQ\" BS\b NL\n CR\r TA\t SUB\Z BS\\ S/',
    'NUL\0 SQ\' DQ\" BS\b NL\n CR\r TA\t SUB\Z BS\\ S/'),
  ('6. Control characters',
    0x01021e1f7f81, 0x01021e1f7f81, 0x00010002001e001f007f0081, 0x01021e1f7fc281);
DELIMITER |;

let QUERY=
SELECT title
     , t_greek
     , t_latin1
     , t_utf16
     , t_utf8mb4
     , count(*)
FROM encoding_test
GROUP BY title
       , t_greek
       , t_latin1
       , t_utf16
       , t_utf8mb4
;|

--echo ===== Test encoding in JSON mode =====
let $rdrs_ronsql = curl --no-progress-meter --fail-with-body -X POST
  -H "Content-Type: application/json"
  http://$RDRS_NOKEY_HOST:$RDRS_NOKEY_PORT/0.1.0/ronsql -d|
--exec $rdrs_ronsql '{"query":"$QUERY", "database":"test"}'
--echo

--echo ===== Test encoding in TSV mode =====
--let $canonicalization_script=s/\x00/<00>/g;s/\x03/<03>/g;s/\x08/<08>/g;s/\x0D/<0D>/g;s/\x1A/<1A>/g;s/\x84/<84>/g;s/\x85/<85>/g;s/\x91/<91>/g;s/\x92/<92>/g;s/\x93/<93>/g;s/\x96/<96>/g;s/\xA4/<A4>/g;s/\xA5/<A5>/g;s/\xB1/<B1>/g;s/\xB2/<B2>/g;s/\xB3/<B3>/g;s/\xB6/<B6>/g;s/\xC3/<C3>/g;s/\xCE/<CE>/g;s/\xc1/<C1>/g;s/\xc2/<C2>/g;s/\xc4/<C4>/g;s/\xc5/<C5>/g;s/\xd6/<C6>/g;s/\xe1/<E1>/g;s/\xe2/<E2>/g;s/\xe3/<E3>/g;s/\xe4/<E4>/g;s/\xe5/<E5>/g;s/\xf6/<F6>/g;
--source suite/ronsql/include/ronsql_compare.inc

--echo Cleanup
DELIMITER ;|
DROP TABLE encoding_test;

dec $i;
}
